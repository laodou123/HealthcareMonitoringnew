@inject Radzen.DialogService DialogService
@inject IJSRuntime js
@inject HttpClient _client
@using HealthcareMonitoring.Client.Static;
@attribute [Authorize]

<RadzenTemplateForm TItem="Appointment" Data="@model" Submit=@OnSubmit>

    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Save" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <button class="btn btn-danger" @onclick="HandleDelete">Delete</button>
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public Appointment Appointment { get; set; }

    Appointment model = new Appointment();

    protected override void OnParametersSet()
    {
        model = Appointment;
    }

    void OnSubmit(Appointment model)
    {
        DialogService.Close(model);
    }
    private async Task HandleDelete()
    {
        System.Console.WriteLine("deletehandle"); // Debugging line
        model.Delete = true;

    }
}